package:
  name: grafana-11.2
  version: 11.2.1
  epoch: 1
  description: The open and composable observability and data visualization platform.
  copyright:
    - license: AGPL-3.0-or-later
  dependencies:
    runtime:
      - bash
    provides:
      - grafana=${{package.full-version}}

environment:
  contents:
    packages:
      - build-base
      - busybox
      - findutils
      - go-1.22
      - nodejs-20
      - posix-libc-utils
      - py3-setuptools
      - python3
      - yarn
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 086b47f098a2f2d27a6d538cf4bc523c892ecdd2
      repository: https://github.com/grafana/grafana
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: github.com/rs/cors@v1.11.0

  - name: Build
    runs: |
      yarn install

      # Builds frontend and backend (build-go build-js)
      make build

  - name: package
    runs: |
      mkdir -p ${{targets.destdir}}/usr/bin
      mkdir -p ${{targets.destdir}}/usr/share/grafana
      mkdir -p ${{targets.destdir}}/etc/grafana

      cp bin/linux-*/* ${{targets.destdir}}/usr/bin/
      cp -r conf public ${{targets.destdir}}/usr/share/grafana/
      cp -r plugins-bundled ${{targets.destdir}}/usr/share/grafana/

      mkdir -p ${{targets.destdir}}/usr/share/grafana/plugins-bundled
      mkdir -p ${{targets.destdir}}/usr/share/grafana/scripts
      mkdir -p ${{targets.destdir}}/usr/share/grafana/bin

      cp conf/sample.ini ${{targets.destdir}}/etc/grafana/grafana.ini
      cp conf/sample.ini ${{targets.destdir}}/etc/grafana/grafana.ini.example

subpackages:
  - name: ${{package.name}}-oci-compat
    dependencies:
      provides:
        - grafana-oci-compat=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/opt/grafana
          mv ./packaging/docker/run.sh ${{targets.subpkgdir}}/opt/grafana/

update:
  enabled: true
  github:
    identifier: grafana/grafana
    strip-prefix: v
    tag-filter-prefix: v11.2.

test:
  environment:
    contents:
      packages:
        - bash
        - curl
        - jq
        - procps
        - shadow
  pipeline:
    - name: "Check Grafana version"
      runs: |
        grafana -v
    - name: "Check Grafana CLI version"
      runs: |
        grafana-cli -v
    - name: "Check Grafana server version"
      runs: |
        grafana-server -v
    - name: "Test Grafana server startup"
      uses: test/daemon-check-output
      with:
        start: |
          grafana-server \
            --config /etc/grafana/grafana.ini \
            --homepath /usr/share/grafana \
            --packaging=wolfi
        timeout: 60
        expected_output: |
          Starting Grafana
          HTTP Server Listen
        setup: |
          mkdir -p /var/lib/grafana
          chown -R root:root /var/lib/grafana
        post: |
          curl -s http://localhost:3000/api/health
          curl -s http://localhost:3000/api/org
          curl -s http://localhost:3000/api/dashboards/home
    - name: "Check configuration file"
      runs: |
        grep -q "app_mode = production" /etc/grafana/grafana.ini
    - name: "Test Grafana CLI commands"
      runs: |
        grafana-cli plugins list-remote
