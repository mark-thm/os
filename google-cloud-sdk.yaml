package:
  name: google-cloud-sdk
  version: 494.0.0
  epoch: 0
  description: "Google Cloud Command Line Interface"
  copyright:
    - license: Apache-2.0
  dependencies:
    provider-priority: 0
    runtime:
      # Required for cyclic redunancy check (gsutil help crcmod)
      - py3-crcmod

data:
  - name: py-versions
    items:
      3.10: "310"
      3.11: "311"
      3.12: "312"

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - python3
      - wolfi-base

pipeline:
  - if: ${{build.arch}} == "x86_64"
    uses: fetch
    with:
      uri: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-${{package.version}}-linux-x86_64.tar.gz
      expected-sha256: 2903ca208f9353ca4574d1b14e1e06d4638caad96d291116ed878c828d90ec4d
      strip-components: 0

  - if: ${{build.arch}} == "aarch64"
    uses: fetch
    with:
      uri: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-${{package.version}}-linux-arm.tar.gz
      expected-sha256: c322bb76f1c2d85cb21cc3868d3af9045d92aefcbdc89f1dbe96f1391ff5ca70
      strip-components: 0

  - runs: |
      ./google-cloud-sdk/install.sh -q

      # Trim some extra stuff
      rm -rf google-cloud-sdk/platform/bundledpythonunix/
      rm -rf google-cloud-sdk/deb
      rm -rf google-cloud-sdk/rpm
      rm google-cloud-sdk/install.bat

      # Remove any third party tests that bloat up the package
      find google-cloud-sdk -type d \( -name 'tests' -o -name 'test' \) -path '*/third_party/*' -exec rm -rf {} +

      # This is a large binary with vulnerabilities in it, users can add it back later.
      google-cloud-sdk/bin/gcloud components remove gcloud-crc32c

      # Running gcloud adds a bunch of pyc files, remove those
      find google-cloud-sdk/ -name "*.pyc" -exec rm -rf '{}' +

      rm -rf google-cloud-sdk/.install

      # gcloud expects to find a directory called ".install" in its "Installation Root" (as reported by "gcloud info").
      # Without this, "gcloud components" doesn't work.
      mkdir google-cloud-sdk/.install

      mkdir -p "${{targets.contextdir}}/usr/share"
      mv google-cloud-sdk ${{targets.contextdir}}/usr/share/

      mkdir -p ${{targets.destdir}}/usr/bin
      for f in bq docker-credential-gcloud gcloud git-credential-gcloud.sh gsutil java_dev_appserver.sh; do
        ln -sf ../share/google-cloud-sdk/bin/$f ${{targets.destdir}}/usr/bin/$f
      done

  - uses: strip

# these just force the installation of a specific
# version of python even though the gcloud tools poke around
# to find one.  As it is, if you had multiple pythons installed,
# then you aren't actually guaranteed to have given version run it.
subpackages:
  - range: py-versions
    name: py${{range.key}}-google-cloud-sdk
    description: ${{vars.pypi-package}} installed for python${{range.key}}
    dependencies:
      provider-priority: ${{range.value}}
      runtime:
        - google-cloud-sdk
        - python-${{range.key}}-base
        - py${{range.key}}-crcmod

test:
  pipeline:
    - runs: gcloud --version
    - runs: gsutil --version
    - runs: gcloud components list

update:
  enabled: true
  release-monitor:
    identifier: 374037
