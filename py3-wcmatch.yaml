package:
  name: py3-wcmatch
  version: "10.0"
  epoch: 0
  description: "Wilcard File Name matching library."
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - py3-bracex
      - python3

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - py3-gpep517
      - py3-pip
      - py3-setuptools
      - py3-wheel
      - python3
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/facelessuser/wcmatch
      tag: ${{package.version}}
      expected-commit: 0be4cfb81792c6f8295bcb7d393dc0e786967563

  - runs: |
      # This is needed to work around the error "ValueError: ZIP does not support timestamps before 1980"
      export SOURCE_DATE_EPOCH=315532800
      python3 -m pip install -U hatchling
      python3 -m gpep517 build-wheel \
        --wheel-dir dist \
        --output-fd 3 3>&1 >&2
      python3 -m installer \
        -d "${{targets.destdir}}" \
        dist/wcmatch-${{package.version}}-*.whl
      install -Dm644 LICENSE.md \
        "${{targets.destdir}}"/usr/share/licenses/${{package.name}}/LICENSE

  - uses: strip

update:
  enabled: true
  github:
    identifier: facelessuser/wcmatch

test:
  environment:
    contents:
      packages:
        - py3-pip
  pipeline:
    - runs: |
        # Test import of wcmatch
        python3 -c 'import wcmatch; print("wcmatch imported successfully")'
    - runs: |
        # Create test files
        touch test_file.txt
        touch another_test_file.txt
    - runs: |
        # Test basic file matching with wcmatch
        python3 -c '
        import wcmatch
        from wcmatch import glob
        # Test glob functionality
        matched_files = glob.glob("test_file.txt")
        print("Matched files:", matched_files)
        assert "test_file.txt" in matched_files
        print("wcmatch glob test passed")
        '
    - runs: |
        # Test multiple file matching with wcmatch
        python3 -c '
        import wcmatch
        from wcmatch import glob
        # Test glob functionality with multiple files
        matched_files = glob.glob("*.txt")
        print("Matched .txt files:", matched_files)
        assert "test_file.txt" in matched_files
        assert "another_test_file.txt" in matched_files
        print("wcmatch multiple file glob test passed")
        '
