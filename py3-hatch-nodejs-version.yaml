package:
  name: py3-hatch-nodejs-version
  version: 0.3.2
  epoch: 0
  description: Reads PEP 621 metadata from the Node.js package.json file.
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - python-3

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - py3-hatchling
      - py3-pip
      - python-3
      - python-3-dev
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/agoose77/hatch-nodejs-version
      tag: v${{package.version}}
      expected-commit: d29c5c327554ab48e274b9668ff8b4e87a6b2508

  - uses: py/pip-build-install

  - uses: strip

update:
  enabled: true
  github:
    identifier: agoose77/hatch-nodejs-version
    tag-filter-prefix: v
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - py3-hatch
  pipeline:
    - runs: |
        mkdir -p src/test_project
        touch src/test_project/__init__.py  # Create an empty Python package

        echo '{"name": "test-project", "version": "${{package.version}}"}' > package.json

        cat <<EOF > pyproject.toml
        [build-system]
        requires = ["hatchling", "hatch-nodejs-version"]
        build-backend = "hatchling.build"

        [project]
        name = "test-project"
        dynamic = ["version"]  # This indicates that the version is determined dynamically

        [tool.hatch.version]
        source = "nodejs"
        EOF

        hatch build

        # Extract the version from the built wheel or sdist
        FILE_VERSION=$(ls dist | sed -n 's/.*-\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p' | head -n 1)

        # Check that the version matches what's in package.json
        if [[ "$FILE_VERSION" == "${{package.version}}" ]]; then
            echo "Test passed: Version matches ${{package.version}}"
        else
            echo "Test failed: Version mismatch"
            exit 1
        fi
